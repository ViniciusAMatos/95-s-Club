/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import ModeloBeans.BeansBebidas;
import ModeloBeans.BeansLogin;
import ModeloBeans.BeansVendaBebidas;
import ModeloConection.ConexaoBD;
import ModeloDAO.DAOBebidas;
import ModeloDAO.DAOVendaBebidas;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vinic
 */
public class CompraBebidas extends javax.swing.JFrame {

    /**
     * Creates new form TelaPrincipal3
     */
    float soma;
    int novo_estoque;
    int novo_estoque1;
    BeansVendaBebidas user = new BeansVendaBebidas();
    BeansBebidas bebi = new BeansBebidas();
    DAOVendaBebidas control = new DAOVendaBebidas();
    ConexaoBD conex = new ConexaoBD();
    public CompraBebidas() {
         try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(CadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        dataCompra();
        desabilitaCampos();
        BeansLogin l = new BeansLogin();
        String credito = "" + l.getCredito();
        saldoMostrar.setText(credito);
        comprar.setEnabled(false);
        cancelar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePesquisa = new javax.swing.JTable();
        cancelar = new javax.swing.JButton();
        novo = new javax.swing.JButton();
        ID = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        quantidade = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Sair = new javax.swing.JButton();
        valor = new javax.swing.JTextField();
        comprar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        dataCompra = new javax.swing.JTextField();
        saldoMostrar = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 758, 428));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(null);

        jTablePesquisa.setBackground(new java.awt.Color(0, 0, 0));
        jTablePesquisa.setForeground(new java.awt.Color(255, 255, 255));
        jTablePesquisa.setModel(tmBebidas);
        jTablePesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePesquisaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTablePesquisa);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(270, 50, 390, 260);

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        getContentPane().add(cancelar);
        cancelar.setBounds(40, 250, 130, 50);

        novo.setText("Novo");
        novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoActionPerformed(evt);
            }
        });
        getContentPane().add(novo);
        novo.setBounds(40, 130, 130, 50);

        ID.setForeground(new java.awt.Color(255, 255, 255));
        ID.setText("Id:");
        getContentPane().add(ID);
        ID.setBounds(410, 330, 20, 14);

        id.setEditable(false);
        getContentPane().add(id);
        id.setBounds(430, 330, 50, 20);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nome:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(390, 360, 40, 14);

        nome.setEditable(false);
        getContentPane().add(nome);
        nome.setBounds(430, 360, 140, 20);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Quantidade:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(360, 390, 70, 14);
        getContentPane().add(quantidade);
        quantidade.setBounds(430, 390, 50, 20);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Valor(R$):");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(370, 420, 60, 14);

        Sair.setText("Sair");
        Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SairActionPerformed(evt);
            }
        });
        getContentPane().add(Sair);
        Sair.setBounds(40, 310, 130, 50);

        valor.setEditable(false);
        getContentPane().add(valor);
        valor.setBounds(430, 420, 100, 20);

        comprar.setText("Comprar");
        comprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprarActionPerformed(evt);
            }
        });
        getContentPane().add(comprar);
        comprar.setBounds(40, 190, 130, 50);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Data da Compra:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(330, 450, 90, 14);

        dataCompra.setEditable(false);
        getContentPane().add(dataCompra);
        dataCompra.setBounds(430, 450, 110, 20);

        saldoMostrar.setEditable(false);
        saldoMostrar.setBackground(new java.awt.Color(204, 0, 153));
        saldoMostrar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        saldoMostrar.setForeground(new java.awt.Color(255, 255, 255));
        saldoMostrar.setBorder(null);
        getContentPane().add(saldoMostrar);
        saldoMostrar.setBounds(80, 0, 110, 50);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Saldo:");
        jLabel5.setToolTipText("");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 10, 70, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/WhatsApp Image 2018-09-21 at 21.57.43.jpeg.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel1.setName(""); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1280, 722);

        setSize(new java.awt.Dimension(855, 542));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTablePesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePesquisaMouseClicked
        int linhaSelecionada = jTablePesquisa.getSelectedRow();
        id.setText(jTablePesquisa.getValueAt(linhaSelecionada, 0).toString());
        nome.setText(jTablePesquisa.getValueAt(linhaSelecionada, 1).toString());
        valor.setText(jTablePesquisa.getValueAt(linhaSelecionada, 4).toString());
        novo_estoque1 =  (int) jTablePesquisa.getValueAt(linhaSelecionada, 3);
        comprar.setEnabled(true);
        novo.setEnabled(false);
        cancelar.setEnabled(true);
    }//GEN-LAST:event_jTablePesquisaMouseClicked

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        limpaCampos();
        limparTabela();
        comprar.setEnabled(false);
        cancelar.setEnabled(false);
        novo.setEnabled(true);
    }//GEN-LAST:event_cancelarActionPerformed

    private void novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoActionPerformed
        try {
            listaContatos();
            habilitaCampos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Problemas ao listar Funcionarios.\n"+ex);
        }
    }//GEN-LAST:event_novoActionPerformed

    private void SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SairActionPerformed
        TelaPrincipal3 tela = new TelaPrincipal3();
        tela.setVisible(true);
        dispose();
    }//GEN-LAST:event_SairActionPerformed

    private void comprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprarActionPerformed
        try {
           if(verificaDados()){
                BeansLogin l = new BeansLogin();
                user.setNome(l.getNome());
                user.setCpf(l.getLogin());
                user.setNomeIng(nome.getText());

                float valoro = Float.parseFloat(valor.getText());
                int quantidadeo = Integer.parseInt(quantidade.getText());
                soma = valoro*quantidadeo;
                novo_estoque = novo_estoque1 - quantidadeo;
                bebi.setQuant((int) novo_estoque);
                user.setQuantidade(Integer.parseInt(quantidade.getText()));
                user.setDataCompra(salvaDataCompra());
                user.setValor(soma);
                float credito = l.getCredito();
                if (credito >= soma ){
                    if(novo_estoque > -1){
                        int resp = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente comprar este produto? O total é de "+soma,
                            "Confirmação!", JOptionPane.YES_NO_OPTION);
                        
                        if (resp == JOptionPane.YES_NO_OPTION) {
                            l.setCredito(atualizaSaldo(l.getLogin()));
                            control.Salvar(user, bebi);
                            comprar.setEnabled(false);
                            cancelar.setEnabled(false);
                            novo.setEnabled(true);
                            String credito1 = "" + l.getCredito();
                            saldoMostrar.setText(credito1);
                            limpaCampos();
                        }
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Desculpe! Só possuimos "+novo_estoque1+" unidades desse produto!");
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Desculpe! Saldo Insuficiente!");
                }
           }else{
               JOptionPane.showMessageDialog(rootPane, "Desculpe! Dados incompletos!");
           }

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"ERRO Ao Inserir Dados!\nErro: "+ex);
        }
    }//GEN-LAST:event_comprarActionPerformed

    DefaultTableModel tmBebidas = new DefaultTableModel(null, new String[]{"Id", "Nome", "Tipo","Quant"," Valor(R$)"});
    List<BeansBebidas> bebidas;
    
    private Float atualizaSaldo(String login){
            BeansLogin s = new BeansLogin();
            float saldo = s.getCredito();
            saldo -= soma;
            return saldo;    
    }
    
    private boolean verificaDados() {
        if ((!nome.getText().equals(""))&&(!quantidade.getText().equals(""))&&
            (!id.getText().equals(""))){            
            return true;
        }
        JOptionPane.showMessageDialog(rootPane, "Senhas Diferentes.");
        return false;
    }
    
    private void listaContatos() throws SQLException {
        limpaCampos();
        DAOBebidas c = new DAOBebidas();
        bebidas = c.getLista("%"); 
        
        // Após pesquisar os contatos, executa o método p/ exibir o resultado na tabela pesquisa
        mostraPesquisa(bebidas);
        bebidas.clear();
    }
    
    private void mostraPesquisa(List<BeansBebidas> bebidas) {
        // Limpa a tabela sempre que for solicitado uma nova pesquisa
        limparTabela();
        
        if (bebidas.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Nenhum registro encontrado.");
        } else {            
            // Linha em branco usada no for, para cada registro é criada uma nova linha 
            String[] linha = new String[] {null, null, null, null, null, null, null, null, null, null, null};
            // P/ cada registro é criada uma nova linha, cada recebe linha os campos do registro
            for (int i = 0; i < bebidas.size(); i++) {
                tmBebidas.addRow(linha);
                tmBebidas.setValueAt(bebidas.get(i).getId(), i, 0);
                tmBebidas.setValueAt(bebidas.get(i).getNome(), i, 1);
                tmBebidas.setValueAt(bebidas.get(i).getTipo(), i, 2);
                tmBebidas.setValueAt(bebidas.get(i).getQuant(), i, 3);
                tmBebidas.setValueAt(bebidas.get(i).getValor(), i, 4);

            }            
        }
    }
    private void dataCompra(){
        
        Date data = new Date();  
        
        SimpleDateFormat formataData = new SimpleDateFormat("dd/MM/yyyy HH:mm");  
        String s = formataData.format( data ); 
        
        dataCompra.setText(formataData.format(data));
    }
     private String salvaDataCompra() {
        Date data = new Date();  
        
        SimpleDateFormat formataData = new SimpleDateFormat("yyyy-MM-dd HH:mm");  
        String dataEmprestimoFormatada = formataData.format(data); 
        
        return dataEmprestimoFormatada;   
    }
    
    private void limparTabela() {       
        while (tmBebidas.getRowCount() > 0) {            
            tmBebidas.removeRow(0);
        }
    }
    
    private void desabilitaCampos() {
        id.setEditable(false);
        nome.setEditable(false);
        quantidade.setEditable(false);
        valor.setEditable(false);
    }
    
     private void habilitaCampos() {
        quantidade.setEditable(true);
    }
     
     private void limpaCampos() {
        id.setText("");
        nome.setText("");
        valor.setText("");
        quantidade.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompraBebidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompraBebidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompraBebidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompraBebidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompraBebidas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ID;
    private javax.swing.JButton Sair;
    private javax.swing.JButton cancelar;
    private javax.swing.JButton comprar;
    private javax.swing.JTextField dataCompra;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTablePesquisa;
    private javax.swing.JTextField nome;
    private javax.swing.JButton novo;
    private javax.swing.JTextField quantidade;
    private javax.swing.JTextField saldoMostrar;
    private javax.swing.JTextField valor;
    // End of variables declaration//GEN-END:variables
}
