/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;


import ModeloBeans.BeansFuncionario;
import ModeloConection.ConexaoBD;
import ModeloDAO.DAOFuncionario;
import ModeloDAO.DAOUsuarios;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import ModeloDAO.ValidaCPF;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author vinic
 */
public class CadastroFuncionario extends javax.swing.JFrame {

    /**
     * Creates new form CadastroFuncionario
     */
    BeansFuncionario func = new BeansFuncionario();
    DAOFuncionario control = new DAOFuncionario();
    ConexaoBD conex = new ConexaoBD();
    int flag = 0;
    public CadastroFuncionario() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(CadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        desabilitaCampos();
        Salvar.setEnabled(false);
        Cancelar.setEnabled(false);
        Editar.setEnabled(false);
        Excluir.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePesquisa = new javax.swing.JTable();
        Pesquisar = new javax.swing.JTextField();
        BPesquisar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        id = new javax.swing.JTextField();
        nome = new javax.swing.JTextField();
        DateNasci = new javax.swing.JFormattedTextField();
        cpf = new javax.swing.JFormattedTextField();
        endereco = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        funcao = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        salario = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        banco = new javax.swing.JComboBox<>();
        agencia = new javax.swing.JFormattedTextField();
        conta = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        Cancelar = new javax.swing.JButton();
        Excluir = new javax.swing.JButton();
        Sair = new javax.swing.JButton();
        Novo = new javax.swing.JButton();
        Salvar = new javax.swing.JButton();
        Editar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setFocusCycleRoot(false);
        setPreferredSize(new java.awt.Dimension(689, 576));
        setSize(new java.awt.Dimension(689, 576));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisar Funcionários", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(620, 250));

        jTablePesquisa.setBackground(new java.awt.Color(0, 0, 0));
        jTablePesquisa.setForeground(new java.awt.Color(255, 255, 255));
        jTablePesquisa.setModel(tmFuncionario);
        jTablePesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePesquisaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePesquisa);

        BPesquisar.setText("Pesquisar");
        BPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BPesquisarActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nome:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(Pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(BPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BPesquisar)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel1.getAccessibleContext().setAccessibleName("Nome");

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 690, 250);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastrar Funcionários", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        id.setEditable(false);
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });
        jPanel2.add(id);
        id.setBounds(130, 30, 39, 20);
        jPanel2.add(nome);
        nome.setBounds(130, 60, 198, 20);

        try {
            DateNasci.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("## / ## / ####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        DateNasci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateNasciActionPerformed(evt);
            }
        });
        jPanel2.add(DateNasci);
        DateNasci.setBounds(130, 90, 150, 20);

        try {
            cpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.### - ##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel2.add(cpf);
        cpf.setBounds(130, 120, 198, 20);
        jPanel2.add(endereco);
        endereco.setBounds(130, 150, 198, 20);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Id:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(100, 30, 30, 14);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nome:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(80, 60, 50, 14);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Data de Nascimento:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(20, 90, 120, 14);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("CPF:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(90, 120, 40, 14);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Endereço:");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(70, 150, 70, 14);

        funcao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gerente", "Funcionário" }));
        funcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcaoActionPerformed(evt);
            }
        });
        jPanel2.add(funcao);
        funcao.setBounds(130, 180, 161, 20);

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Cargo:");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(80, 180, 50, 14);

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Salário (R$) :");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(50, 210, 70, 14);
        jPanel2.add(salario);
        salario.setBounds(130, 210, 90, 20);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 250, 360, 270);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Bancários", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(null);

        banco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o seu BANCO", "Banco do Brasil.", "Caixa Econômica Federal.", "Itaú Unibanco.", "Bradesco.", "BNDES.", "Santander.", "BTG Pactual." }));
        banco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bancoActionPerformed(evt);
            }
        });
        jPanel3.add(banco);
        banco.setBounds(60, 60, 200, 20);

        try {
            agencia.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#### - #")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        agencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agenciaActionPerformed(evt);
            }
        });
        jPanel3.add(agencia);
        agencia.setBounds(60, 110, 163, 20);

        try {
            conta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###### - #")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel3.add(conta);
        conta.setBounds(60, 160, 163, 20);

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Banco:");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(30, 40, 50, 14);

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Agência:");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(30, 90, 60, 14);

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Conta:");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(30, 140, 50, 14);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(360, 250, 330, 270);

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(null);

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });
        jPanel4.add(Cancelar);
        Cancelar.setBounds(420, 20, 90, 23);

        Excluir.setText("Excluir");
        Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirActionPerformed(evt);
            }
        });
        jPanel4.add(Excluir);
        Excluir.setBounds(320, 50, 90, 23);

        Sair.setText("Sair");
        Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SairActionPerformed(evt);
            }
        });
        jPanel4.add(Sair);
        Sair.setBounds(420, 50, 90, 23);

        Novo.setText("Novo");
        Novo.setPreferredSize(new java.awt.Dimension(75, 23));
        Novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NovoActionPerformed(evt);
            }
        });
        jPanel4.add(Novo);
        Novo.setBounds(220, 20, 90, 23);

        Salvar.setText("Salvar");
        Salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarActionPerformed(evt);
            }
        });
        jPanel4.add(Salvar);
        Salvar.setBounds(220, 50, 90, 23);

        Editar.setText("Editar");
        Editar.setPreferredSize(new java.awt.Dimension(75, 23));
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });
        jPanel4.add(Editar);
        Editar.setBounds(320, 20, 90, 23);

        getContentPane().add(jPanel4);
        jPanel4.setBounds(0, 520, 690, 90);

        setSize(new java.awt.Dimension(705, 650));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SairActionPerformed
        TelaPrincipal1 tela = new TelaPrincipal1();
        tela.setVisible(true);
        dispose();
    }//GEN-LAST:event_SairActionPerformed

    private void DateNasciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateNasciActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateNasciActionPerformed

    private void BPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BPesquisarActionPerformed
        try {
            listaContatos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Problemas ao listar Funcionarios.\n"+ex);
        }
    }//GEN-LAST:event_BPesquisarActionPerformed

    private void funcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_funcaoActionPerformed

    private void agenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agenciaActionPerformed

    private void bancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bancoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bancoActionPerformed

    private void NovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NovoActionPerformed
        flag = 1;
        habilitaCampos();
        Salvar.setEnabled(true);
        Cancelar.setEnabled(true);
        // Limpa os dados dos campos
        limpaCampos();
    }//GEN-LAST:event_NovoActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        limpaCampos();
        limparTabela();
        Novo.setEnabled(true);
        Salvar.setEnabled(false);
        Cancelar.setEnabled(false);
        Editar.setEnabled(false);
        Excluir.setEnabled(false);
    }//GEN-LAST:event_CancelarActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        flag = 2;
        habilitaCampos();
        Salvar.setEnabled(true);
        Cancelar.setEnabled(true);
        Editar.setEnabled(false);
        Excluir.setEnabled(false);
        Novo.setEnabled(false);
    }//GEN-LAST:event_EditarActionPerformed

    private void SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarActionPerformed
        if(flag==1){    
            if (verificaDados() && verificaCPF()) {
                try {
                    func.setNome(nome.getText());
                    func.setFuncao((String) funcao.getSelectedItem());
                    func.setCpf(cpf.getText());
                    func.setData(DateNasci.getText());
                    func.setEndereco(endereco.getText());
                    func.setAgencia(agencia.getText());
                    func.setBanco((String) banco.getSelectedItem());
                    func.setConta(conta.getText());
                    func.setSalario(Float.parseFloat(salario.getText()));
                    Salvar.setEnabled(false);
                    Cancelar.setEnabled(false);
                    limpaCampos();
                    desabilitaCampos();
                    control.Salvar(func);
                } catch (SQLException | ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null,"ERRO Ao Inserir Dados!\nErro: "+ex);
                }
            }
        }else{
            try {
                alteraRegistro();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao alterar registro.\n"+ex);
            }
        }    
    }//GEN-LAST:event_SalvarActionPerformed

    private void ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirActionPerformed
        try {
            excluirRegistro();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao excluir registro."+ex);
        }
    }//GEN-LAST:event_ExcluirActionPerformed

    private void jTablePesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePesquisaMouseClicked
        int linhaSelecionada = jTablePesquisa.getSelectedRow();
        id.setText(jTablePesquisa.getValueAt(linhaSelecionada, 0).toString());
        nome.setText(jTablePesquisa.getValueAt(linhaSelecionada, 1).toString());
        funcao.setSelectedItem(jTablePesquisa.getValueAt(linhaSelecionada, 2).toString());
        cpf.setText(jTablePesquisa.getValueAt(linhaSelecionada, 3).toString());
        endereco.setText(jTablePesquisa.getValueAt(linhaSelecionada, 4).toString());
        DateNasci.setText(jTablePesquisa.getValueAt(linhaSelecionada, 5).toString());      
        agencia.setText(jTablePesquisa.getValueAt(linhaSelecionada, 6).toString());
        conta.setText(jTablePesquisa.getValueAt(linhaSelecionada, 7).toString());
        banco.setSelectedItem(jTablePesquisa.getValueAt(linhaSelecionada, 8).toString());
        salario.setText(jTablePesquisa.getValueAt(linhaSelecionada, 9).toString());      
        Editar.setEnabled(true);
        Excluir.setEnabled(true);
    }//GEN-LAST:event_jTablePesquisaMouseClicked

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    
    DefaultTableModel tmFuncionario = new DefaultTableModel(null, new String[]{"Id", "Nome", "Funcao", "Cpf","Endereco","Nascimento", "Agencia","Conta","Banco","Salario"});
    List<BeansFuncionario> funcionarios;
    private void listaContatos() throws SQLException {
        limpaCampos();
        DAOFuncionario c = new DAOFuncionario();
        funcionarios = c.getLista("%" + Pesquisar.getText() + "%"); 
        
        // Após pesquisar os contatos, executa o método p/ exibir o resultado na tabela pesquisa
        mostraPesquisa(funcionarios);
        funcionarios.clear();
    }
    // Mostra a lista de resultado de acordo com o nome passado no campo pesquisa
    private void mostraPesquisa(List<BeansFuncionario> funcionario) {
        // Limpa a tabela sempre que for solicitado uma nova pesquisa
        limparTabela();
        
        if (funcionario.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Nenhum registro encontrado.");
        } else {            
            // Linha em branco usada no for, para cada registro é criada uma nova linha 
            String[] linha = new String[] {null, null, null, null, null, null, null, null, null, null};
            // P/ cada registro é criada uma nova linha, cada recebe linha os campos do registro
            for (int i = 0; i < funcionario.size(); i++) {
                tmFuncionario.addRow(linha);
                tmFuncionario.setValueAt(funcionario.get(i).getCodigo(), i, 0);
                tmFuncionario.setValueAt(funcionario.get(i).getNome(), i, 1);
                tmFuncionario.setValueAt(funcionario.get(i).getFuncao(), i, 2);
                tmFuncionario.setValueAt(funcionario.get(i).getCpf(), i, 3);
                tmFuncionario.setValueAt(funcionario.get(i).getEndereco(), i, 4);
                tmFuncionario.setValueAt(funcionario.get(i).getData(), i, 5);
                tmFuncionario.setValueAt(funcionario.get(i).getAgencia(), i, 6);
                tmFuncionario.setValueAt(funcionario.get(i).getConta(), i, 7);
                tmFuncionario.setValueAt(funcionario.get(i).getBanco(), i, 8);
                tmFuncionario.setValueAt(funcionario.get(i).getSalario(), i, 9);

            }            
        }
    }
    
    private void excluirRegistro() throws SQLException {
        // Se algum registro estiver selecionado
        if (jTablePesquisa.getSelectedRow() != -1) {
            // Exibe uma janela de confirmação antes de exluir o registro
            int resp = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir este registro?",
                    "Confirmação!", JOptionPane.YES_NO_OPTION);

            // Se a confirmação for SIM
            if (resp == JOptionPane.YES_NO_OPTION) {
                // Recebe a linha selecionada
                int linhaSelecionada = jTablePesquisa.getSelectedRow();
                // Recebe o ID da linha selecionada
                int id = (int) jTablePesquisa.getValueAt(linhaSelecionada, 0);
                // Remove o registro, usando como parâmetro, o id da linha selecionada                
                DAOFuncionario d = new DAOFuncionario();
                DAOUsuarios u = new DAOUsuarios();
                d.remove(id);
                u.remove(id);

                JOptionPane.showMessageDialog(rootPane, "Registro excluido com sucesso.");
                limpaCampos();
                desabilitaCampos();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Registro não selecionado.");
        }
    }
    
    private void alteraRegistro() throws SQLException {
        if (jTablePesquisa.getSelectedRow() != -1) {
            int resp = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente alterar este registro?",
                    "Confirmação!", JOptionPane.YES_NO_OPTION);

            // Se a confirmação for SIM
            if (resp == JOptionPane.YES_NO_OPTION) {                
                DAOFuncionario controle = new DAOFuncionario(); 
                BeansFuncionario funcionario = new BeansFuncionario();
                
                funcionario.setCodigo(Integer.parseInt(id.getText()));
                funcionario.setNome(nome.getText());
                funcionario.setFuncao((String) funcao.getSelectedItem());
                funcionario.setCpf(cpf.getText());
                funcionario.setData(DateNasci.getText());
                funcionario.setEndereco(endereco.getText());
                funcionario.setAgencia(agencia.getText());
                funcionario.setConta(conta.getText());
                funcionario.setBanco((String) banco.getSelectedItem());
                funcionario.setSalario(Float.parseFloat(salario.getText()));
                
                
                controle.altera(funcionario);
                
                JOptionPane.showMessageDialog(rootPane, "Registro alterado com sucesso.");
                limpaCampos();
                desabilitaCampos();
                listaContatos();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Registro não selecionado.");
        }
    }
    
    private boolean verificaDados() {
        if ((!nome.getText().equals("")) && (!cpf.getText().equals("")) 
                && (!DateNasci.getText().equals("")) && (!agencia.getText().equals(""))&&(!conta.getText().equals(""))
                && (!salario.getText().equals("")) && (banco.getSelectedItem()).equals("Selecione o seu BANCO")){            
            return true;
        }
        JOptionPane.showMessageDialog(rootPane, "Dados incompletos.");
        return false;
    }
    
    private void limparTabela() {       
        while (tmFuncionario.getRowCount() > 0) {            
            tmFuncionario.removeRow(0);
        }
    } 
    
    private void limpaCampos() {
        nome.setText("");
        cpf.setText("");
        id.setText("");
        DateNasci.setText("");
        endereco.setText("");
        salario.setText("");
        conta.setText("");
        agencia.setText("");
        
    }
    private boolean verificaCPF(){
        ValidaCPF d = new ValidaCPF();
        boolean valida = ValidaCPF.isCPF(cpf.getText());
        if (valida == true){
            return true;
        }else{
            JOptionPane.showMessageDialog(rootPane, "CPF Invalido.");
            return false;
        }
    }
    // Desabilita os campos do formulário
    private void desabilitaCampos() {
        nome.setEditable(false);
        cpf.setEditable(false);
        DateNasci.setEditable(false);
        salario.setEditable(false);
        endereco.setEditable(false);
        agencia.setEditable(false);
        banco.setEditable(false);
        
    }
    
    // Habilita os campos do formulário
    private void habilitaCampos() {
        nome.setEditable(true);
        cpf.setEditable(true);
        DateNasci.setEditable(true);
        salario.setEditable(true);
        endereco.setEditable(true);
        agencia.setEditable(true);
        banco.setEditable(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BPesquisar;
    private javax.swing.JButton Cancelar;
    private javax.swing.JFormattedTextField DateNasci;
    private javax.swing.JButton Editar;
    private javax.swing.JButton Excluir;
    private javax.swing.JButton Novo;
    private javax.swing.JTextField Pesquisar;
    private javax.swing.JButton Sair;
    private javax.swing.JButton Salvar;
    private javax.swing.JFormattedTextField agencia;
    private javax.swing.JComboBox<String> banco;
    private javax.swing.JFormattedTextField conta;
    private javax.swing.JFormattedTextField cpf;
    private javax.swing.JTextField endereco;
    private javax.swing.JComboBox<String> funcao;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePesquisa;
    private javax.swing.JTextField nome;
    private javax.swing.JTextField salario;
    // End of variables declaration//GEN-END:variables
}
