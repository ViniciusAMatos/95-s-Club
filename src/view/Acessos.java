/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import ModeloBeans.BeansFuncionario;
import ModeloBeans.BeansUsuarioFuncionario;
import ModeloConection.ConexaoBD;
import ModeloDAO.DAOFuncionario;
import ModeloDAO.DAOUsuarios;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vinic
 */
public class Acessos extends javax.swing.JFrame {

    /**
     * Creates new form Acessos
     */
    int flag = 0;
    BeansUsuarioFuncionario user = new BeansUsuarioFuncionario();
    DAOUsuarios control = new DAOUsuarios();
    ConexaoBD conexao = new ConexaoBD();
    public Acessos() {
         try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(CadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        desabilitaCampos();
        Cargo.setEnabled(false);
        nome.setEnabled(false);
        cpf.setEnabled(false);
        id.setEnabled(false);
        
        Salvar.setEnabled(false);
        Cancelar.setEnabled(false);
        Editar.setEnabled(false);
        Excluir.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        selecionar = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        CPesquisar = new javax.swing.JTextField();
        BPesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePesquisaFunc = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePesquisaUser = new javax.swing.JTable();
        Usuarios = new javax.swing.JRadioButton();
        func = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Login = new javax.swing.JTextField();
        Cargo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Salvar = new javax.swing.JButton();
        Editar = new javax.swing.JButton();
        Excluir = new javax.swing.JButton();
        Cancelar = new javax.swing.JButton();
        Sair = new javax.swing.JButton();
        Senha = new javax.swing.JPasswordField();
        ConfirmarSenha = new javax.swing.JPasswordField();
        cpf = new javax.swing.JTextField();
        nome = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisar Funcion치rios e Usu치rios", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        CPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPesquisarActionPerformed(evt);
            }
        });

        BPesquisar.setText("Pesquisar");
        BPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BPesquisarActionPerformed(evt);
            }
        });

        jTablePesquisaFunc.setBackground(new java.awt.Color(0, 0, 0));
        jTablePesquisaFunc.setForeground(new java.awt.Color(255, 255, 255));
        jTablePesquisaFunc.setModel(UsertmFunc);
        jTablePesquisaFunc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePesquisaFuncMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTablePesquisaFunc);

        jTablePesquisaUser.setBackground(new java.awt.Color(0, 0, 0));
        jTablePesquisaUser.setForeground(new java.awt.Color(255, 255, 255));
        jTablePesquisaUser.setModel(Usertm);
        jTablePesquisaUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePesquisaUserMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTablePesquisaUser);

        Usuarios.setBackground(new java.awt.Color(0, 0, 0));
        selecionar.add(Usuarios);
        Usuarios.setForeground(new java.awt.Color(255, 255, 255));
        Usuarios.setText("Usu치rios");

        func.setBackground(new java.awt.Color(0, 0, 0));
        selecionar.add(func);
        func.setForeground(new java.awt.Color(255, 255, 255));
        func.setText("Funcion치rios");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Nome:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(CPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(152, 152, 152))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(func)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Usuarios))
                        .addGap(46, 46, 46))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Usuarios)
                            .addComponent(func)))
                    .addComponent(BPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 770, 300);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro De Acessos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        Cargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gerente", "Funcion치rio", "Cliente" }));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Login:");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Senha:");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cargo:");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Confirmar Senha:");

        Salvar.setText("Salvar");
        Salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarActionPerformed(evt);
            }
        });

        Editar.setText("Editar");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });

        Excluir.setText("Excluir");
        Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirActionPerformed(evt);
            }
        });

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        Sair.setText("Sair");
        Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SairActionPerformed(evt);
            }
        });

        ConfirmarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmarSenhaActionPerformed(evt);
            }
        });

        cpf.setEditable(false);

        nome.setEditable(false);

        id.setEditable(false);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Id:");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Nome:");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("CPF:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Senha)
                    .addComponent(Login)
                    .addComponent(ConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(308, 308, 308))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(152, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Editar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Cancelar)
                        .addGap(18, 18, 18)
                        .addComponent(Salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Sair, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(155, 155, 155))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(nome)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Cargo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(159, 159, 159))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Login, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Senha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cancelar)
                    .addComponent(Salvar)
                    .addComponent(Excluir)
                    .addComponent(Sair)
                    .addComponent(Editar))
                .addGap(76, 76, 76))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 300, 770, 250);

        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 710, 530);

        setSize(new java.awt.Dimension(788, 580));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CPesquisarActionPerformed

    private void ConfirmarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmarSenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConfirmarSenhaActionPerformed

    private void SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SairActionPerformed
        TelaPrincipal1 tela = new TelaPrincipal1();
        tela.setVisible(true);
        dispose();
    }//GEN-LAST:event_SairActionPerformed

    private void SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarActionPerformed
        if(flag==1){    
            if (verificaDados()) {
                try {
                    user.setId(Integer.parseInt(id.getText()));
                    user.setNome(nome.getText());
                    user.setCpf(cpf.getText());
                    user.setLogin(Login.getText());
                    user.setSenha(Senha.getText());
                    user.setFuncao((String) Cargo.getSelectedItem());
                    limpaCampos();
                    desabilitaCampos();
                    Salvar.setEnabled(false);
                    Cancelar.setEnabled(false);
                    control.Salvar(user);
                } catch (SQLException | ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null,"ERRO Ao Inserir Dados!\nErro: "+ex);
                }
            }
       }else{
           try {
               alteraRegistro();
               Cargo.setEnabled(false);
           } catch (SQLException ex) {
               JOptionPane.showMessageDialog(rootPane, "Erro ao alterar registro.\n"+ex);
           }
       } 
    }//GEN-LAST:event_SalvarActionPerformed

    private void BPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BPesquisarActionPerformed
        try {
            listaAcessos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Problemas ao listar Funcionarios.\n"+ex);
        }
    }//GEN-LAST:event_BPesquisarActionPerformed

    private void jTablePesquisaFuncMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePesquisaFuncMouseClicked
        int linhaSelecionada = jTablePesquisaFunc.getSelectedRow();
        id.setText(jTablePesquisaFunc.getValueAt(linhaSelecionada, 0).toString());
        nome.setText(jTablePesquisaFunc.getValueAt(linhaSelecionada, 1).toString());
        cpf.setText(jTablePesquisaFunc.getValueAt(linhaSelecionada, 2).toString());
        Cargo.setSelectedItem(jTablePesquisaFunc.getValueAt(linhaSelecionada, 3).toString());
        Excluir.setEnabled(true);
        flag = 1;
        habilitaCampos();
        Salvar.setEnabled(true);
        Cancelar.setEnabled(true);
        // Limpa os dados dos campos
    }//GEN-LAST:event_jTablePesquisaFuncMouseClicked

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        flag = 2;
        habilitaCampos();
        Salvar.setEnabled(true);
        Cancelar.setEnabled(true);
        Editar.setEnabled(false);
        Excluir.setEnabled(false);
        //Novo.setEnabled(false);
        Cargo.setEnabled(true);
    }//GEN-LAST:event_EditarActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        limpaCampos();
        limparTabela();
       // Novo.setEnabled(true);
        Salvar.setEnabled(false);
        Cancelar.setEnabled(false);
        Editar.setEnabled(false);
        Excluir.setEnabled(false);
    }//GEN-LAST:event_CancelarActionPerformed

    private void ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirActionPerformed
        try {
            excluirRegistro();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao excluir registro."+ex);
        }
    }//GEN-LAST:event_ExcluirActionPerformed

    private void jTablePesquisaUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePesquisaUserMouseClicked
        int linhaSelecionada = jTablePesquisaUser.getSelectedRow();
        id.setText(jTablePesquisaUser.getValueAt(linhaSelecionada, 0).toString());
        nome.setText(jTablePesquisaUser.getValueAt(linhaSelecionada, 1).toString());
        cpf.setText(jTablePesquisaUser.getValueAt(linhaSelecionada, 2).toString());
        Cargo.setSelectedItem(jTablePesquisaUser.getValueAt(linhaSelecionada, 3).toString());
        Login.setText(jTablePesquisaUser.getValueAt(linhaSelecionada, 4).toString());
        Senha.setText(jTablePesquisaUser.getValueAt(linhaSelecionada, 5).toString());
        ConfirmarSenha.setText(jTablePesquisaUser.getValueAt(linhaSelecionada, 5).toString());
        
        Editar.setEnabled(true);
        Excluir.setEnabled(true);
    }//GEN-LAST:event_jTablePesquisaUserMouseClicked

    private void excluirRegistro() throws SQLException {
        // Se algum registro estiver selecionado
        if (jTablePesquisaUser.getSelectedRow() != -1) {
            // Exibe uma janela de confirma칞칚o antes de exluir o registro
            int resp = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir este registro?",
                    "Confirma칞칚o!", JOptionPane.YES_NO_OPTION);

            // Se a confirma칞칚o for SIM
            if (resp == JOptionPane.YES_NO_OPTION) {
                // Recebe a linha selecionada
                int linhaSelecionada = jTablePesquisaUser.getSelectedRow();
                // Recebe o ID da linha selecionada
                int id = (int) jTablePesquisaUser.getValueAt(linhaSelecionada, 0);
                // Remove o registro, usando como par칙metro, o id da linha selecionada                
                DAOUsuarios d = new DAOUsuarios();
                d.remove(id);

                JOptionPane.showMessageDialog(rootPane, "Registro excluido com sucesso.");
                limpaCampos();
                desabilitaCampos();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Registro n칚o selecionado.");
        }
    }
    
    private void desabilitaCampos() {
        Login.setEditable(false);
        Senha.setEditable(false);
        ConfirmarSenha.setEditable(false);
    }
    
     private void habilitaCampos() {
        Login.setEditable(true);
        Senha.setEditable(true);
        ConfirmarSenha.setEditable(true);
    }
     
     private void limpaCampos() {
        nome.setText("");
        id.setText("");
        cpf.setText("");
        Login.setText("");
        Senha.setText("");
        ConfirmarSenha.setText("");
    }
     
    private void alteraRegistro() throws SQLException {
        if (jTablePesquisaUser.getSelectedRow() != -1) {
            int resp = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente alterar este registro?",
                    "Confirma칞칚o!", JOptionPane.YES_NO_OPTION);

            // Se a confirma칞칚o for SIM
            if (resp == JOptionPane.YES_NO_OPTION) {                
                DAOUsuarios controle = new DAOUsuarios(); 
                BeansUsuarioFuncionario usuario = new BeansUsuarioFuncionario();
             
                usuario.setId(Integer.parseInt(id.getText()));
                usuario.setNome(nome.getText());
                usuario.setCpf(cpf.getText());
                usuario.setLogin(Login.getText());
                usuario.setSenha(Senha.getText());
                usuario.setFuncao((String) Cargo.getSelectedItem());
                
                controle.altera(usuario);
                
                JOptionPane.showMessageDialog(rootPane, "Registro alterado com sucesso.");
                limpaCampos();
                desabilitaCampos();
                listaAcessos();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Registro n칚o selecionado.");
        }
    }
          
    private void limparTabela() {       
        while (UsertmFunc.getRowCount() > 0) {            
            UsertmFunc.removeRow(0);
        }
    } 
    private void limparTabelaUser() {       
        while (Usertm.getRowCount() > 0) {            
            Usertm.removeRow(0);
        }
    } 

      
          
          
    DefaultTableModel UsertmFunc = new DefaultTableModel(null, new String[]{"Id", "Nome", "CPF", "Cargo"});
    List<BeansFuncionario> funcionarios;
    
    
    DefaultTableModel Usertm = new DefaultTableModel(null, new String[]{"Id", "Nome", "CPF", "Cargo", "Login", "Senha"});
    List<BeansUsuarioFuncionario> Usuario;

    private void listaAcessos() throws SQLException {
        //limpaCampos();
        DAOUsuarios c = new DAOUsuarios();
        DAOFuncionario d = new DAOFuncionario();
        if (func.isSelected()){
            funcionarios = d.getLista("%" + CPesquisar.getText() + "%"); 
            mostraPesquisaFunc(funcionarios);
            funcionarios.clear();
        }else if(Usuarios.isSelected()){
            Usuario = c.getListaUser("%" + CPesquisar.getText() + "%"); 
            mostraPesquisa(Usuario);
            Usuario.clear();
        }else{
            JOptionPane.showMessageDialog(rootPane, "Selecione um campo de pesquisa.");
        }
        // Ap칩s pesquisar os contatos, executa o m칠todo p/ exibir o resultado na tabela pesquisa

      
    }
   private void mostraPesquisaFunc(List<BeansFuncionario> Usuariofuncionario) {
        // Limpa a tabela sempre que for solicitado uma nova pesquisa
        limparTabela();
        
        if (Usuariofuncionario.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Nenhum registro encontrado.");
        } else {            
            // Linha em branco usada no for, para cada registro 칠 criada uma nova linha 
            String[] linha = new String[] {null, null, null,null};
            // P/ cada registro 칠 criada uma nova linha, cada recebe linha os campos do registro
            for (int i = 0; i < Usuariofuncionario.size(); i++) {
                UsertmFunc.addRow(linha);
                UsertmFunc.setValueAt(Usuariofuncionario.get(i).getCodigo(), i, 0);
                UsertmFunc.setValueAt(Usuariofuncionario.get(i).getNome(), i, 1);
                UsertmFunc.setValueAt(Usuariofuncionario.get(i).getCpf(), i, 2);
                UsertmFunc.setValueAt(Usuariofuncionario.get(i).getFuncao(), i, 3);
                
            }            
        }
    }
   
   private void mostraPesquisa(List<BeansUsuarioFuncionario> Usuariofuncionario) {
        // Limpa a tabela sempre que for solicitado uma nova pesquisa
        limparTabelaUser();
        
        if (Usuariofuncionario.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Nenhum registro encontrado.");
        } else {            
            // Linha em branco usada no for, para cada registro 칠 criada uma nova linha 
            String[] linha = new String[] {null, null, null,null,null,null};
            // P/ cada registro 칠 criada uma nova linha, cada recebe linha os campos do registro
            for (int i = 0; i < Usuariofuncionario.size(); i++) {
                Usertm.addRow(linha);
                Usertm.setValueAt(Usuariofuncionario.get(i).getId(), i, 0);
                Usertm.setValueAt(Usuariofuncionario.get(i).getNome(), i, 1);
                Usertm.setValueAt(Usuariofuncionario.get(i).getCpf(), i, 2);
                Usertm.setValueAt(Usuariofuncionario.get(i).getLogin(), i, 4);
                Usertm.setValueAt(Usuariofuncionario.get(i).getSenha(), i, 5);
                Usertm.setValueAt(Usuariofuncionario.get(i).getFuncao(), i, 3);
                
            }            
        }
    }
   
     private boolean verificaDados() {
        if ((Senha.getText().equals(ConfirmarSenha.getText()))&&
           (!nome.getText().equals("")) && (!cpf.getText().equals(""))&&
            (!id.getText().equals(""))){            
            return true;
        }
        JOptionPane.showMessageDialog(rootPane, "Senhas Diferentes.");
        return false;
    }
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Acessos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Acessos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Acessos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Acessos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Acessos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BPesquisar;
    private javax.swing.JTextField CPesquisar;
    private javax.swing.JButton Cancelar;
    private javax.swing.JComboBox<String> Cargo;
    private javax.swing.JPasswordField ConfirmarSenha;
    private javax.swing.JButton Editar;
    private javax.swing.JButton Excluir;
    private javax.swing.JTextField Login;
    private javax.swing.JButton Sair;
    private javax.swing.JButton Salvar;
    private javax.swing.JPasswordField Senha;
    private javax.swing.JRadioButton Usuarios;
    private javax.swing.JTextField cpf;
    private javax.swing.JRadioButton func;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTablePesquisaFunc;
    private javax.swing.JTable jTablePesquisaUser;
    private javax.swing.JTextField nome;
    private javax.swing.ButtonGroup selecionar;
    // End of variables declaration//GEN-END:variables
}
