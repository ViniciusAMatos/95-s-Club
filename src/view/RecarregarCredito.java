/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import ModeloBeans.BeansCliente;
import ModeloBeans.BeansLogin;
import ModeloBeans.BeansRecargaCredito;
import ModeloConection.ConexaoBD;
import ModeloDAO.DAOCliente;
import ModeloDAO.DAORecargaCredito;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vinic
 */
public class RecarregarCredito extends javax.swing.JFrame {

    /**
     * Creates new form RecarregarCredito
     */
    BeansLogin l = new BeansLogin();
    BeansCliente clie = new BeansCliente();
    BeansRecargaCredito reca = new BeansRecargaCredito();
    DAORecargaCredito recaDAO = new DAORecargaCredito();
    DAOCliente control = new DAOCliente();
    ConexaoBD conex = new ConexaoBD();
    int flag = 0;
    public RecarregarCredito() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(CadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        desabilitaCampos();
        dataCompra();
        Salvar.setEnabled(false);
        Cancelar.setEnabled(false);
//        Editar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SaldoAt1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePesquisa = new javax.swing.JTable();
        Pesquisar = new javax.swing.JTextField();
        BPesquisar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        SaldoAt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Cancelar = new javax.swing.JButton();
        Salvar = new javax.swing.JButton();
        Sair = new javax.swing.JButton();
        nome = new javax.swing.JTextField();
        DateNasci = new javax.swing.JTextField();
        codigAcesso = new javax.swing.JTextField();
        senha = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        iddd = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        cpf = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        NwSaldo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        dataCompra = new javax.swing.JTextField();

        SaldoAt1.setEditable(false);
        SaldoAt1.setBorder(null);
        SaldoAt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaldoAt1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisar Clientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(440, 250));

        jTablePesquisa.setBackground(new java.awt.Color(0, 0, 0));
        jTablePesquisa.setForeground(new java.awt.Color(255, 255, 255));
        jTablePesquisa.setModel(tmCliente);
        jTablePesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePesquisaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePesquisa);

        BPesquisar.setText("Pesquisar");
        BPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BPesquisarActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nome:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(Pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BPesquisar)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 510, 250);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recarregar Cr√©dito", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setLayout(null);

        SaldoAt.setEditable(false);
        SaldoAt.setBorder(null);
        SaldoAt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaldoAtActionPerformed(evt);
            }
        });
        jPanel2.add(SaldoAt);
        SaldoAt.setBounds(220, 160, 106, 20);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Saldo Atual:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(140, 160, 60, 14);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Saldo que deseja adicionar:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(70, 190, 140, 20);

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });
        jPanel2.add(Cancelar);
        Cancelar.setBounds(210, 260, 80, 23);

        Salvar.setText("Adicionar");
        Salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarActionPerformed(evt);
            }
        });
        jPanel2.add(Salvar);
        Salvar.setBounds(110, 260, 80, 23);

        Sair.setText("Sair");
        Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SairActionPerformed(evt);
            }
        });
        jPanel2.add(Sair);
        Sair.setBounds(310, 260, 80, 23);

        nome.setEditable(false);
        nome.setBorder(null);
        jPanel2.add(nome);
        nome.setBounds(60, 70, 140, 20);

        DateNasci.setEditable(false);
        DateNasci.setBorder(null);
        jPanel2.add(DateNasci);
        DateNasci.setBounds(310, 40, 140, 20);

        codigAcesso.setEditable(false);
        codigAcesso.setBorder(null);
        jPanel2.add(codigAcesso);
        codigAcesso.setBounds(60, 100, 80, 20);

        senha.setEditable(false);
        senha.setBorder(null);
        jPanel2.add(senha);
        senha.setBounds(310, 100, 100, 20);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nome:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(20, 70, 40, 14);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Data de Nascimento:");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(200, 40, 100, 14);

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Login:");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(20, 100, 40, 14);

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Senha:");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(270, 100, 40, 14);

        iddd.setForeground(new java.awt.Color(255, 255, 255));
        iddd.setText("Id:");
        jPanel2.add(iddd);
        iddd.setBounds(40, 40, 20, 14);

        id.setEditable(false);
        id.setBorder(null);
        jPanel2.add(id);
        id.setBounds(60, 40, 60, 20);

        cpf.setEditable(false);
        cpf.setBorder(null);
        jPanel2.add(cpf);
        cpf.setBounds(310, 70, 140, 20);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("CPF:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(280, 70, 23, 14);

        NwSaldo.setBorder(null);
        NwSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NwSaldoActionPerformed(evt);
            }
        });
        jPanel2.add(NwSaldo);
        NwSaldo.setBounds(220, 190, 106, 20);

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Data da recarga:");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(120, 220, 86, 14);

        dataCompra.setEditable(false);
        dataCompra.setBorder(null);
        dataCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataCompraActionPerformed(evt);
            }
        });
        jPanel2.add(dataCompra);
        dataCompra.setBounds(220, 220, 106, 20);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 250, 510, 310);

        setSize(new java.awt.Dimension(525, 595));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SairActionPerformed
       TelaPrincipal2 tela = new TelaPrincipal2();
        tela.setVisible(true);
        dispose();
    }//GEN-LAST:event_SairActionPerformed

    private void BPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BPesquisarActionPerformed
        try {
            listaContatos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Problemas ao listar Funcionarios.\n"+ex);
        }
    }//GEN-LAST:event_BPesquisarActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        limpaCampos();
        limparTabela();
        Salvar.setEnabled(false);
        Cancelar.setEnabled(false);
//        Editar.setEnabled(false);
    }//GEN-LAST:event_CancelarActionPerformed

    private void SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarActionPerformed

        try {
            try {
                alteraRegistro();
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao adicionar este valor.\n"+ex);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao adicionar este valor.\n"+ex);
        }
       
    }//GEN-LAST:event_SalvarActionPerformed

    private void jTablePesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePesquisaMouseClicked
        int linhaSelecionada = jTablePesquisa.getSelectedRow();
        SaldoAt.setText(jTablePesquisa.getValueAt(linhaSelecionada, 4).toString());
        id.setText((String) jTablePesquisa.getValueAt(linhaSelecionada, 0).toString());
        nome.setText(jTablePesquisa.getValueAt(linhaSelecionada, 1).toString());
        cpf.setText(jTablePesquisa.getValueAt(linhaSelecionada, 2).toString());
        DateNasci.setText(jTablePesquisa.getValueAt(linhaSelecionada, 3).toString());      
        codigAcesso.setText(jTablePesquisa.getValueAt(linhaSelecionada, 5).toString());
        senha.setText(jTablePesquisa.getValueAt(linhaSelecionada, 6).toString());
                
        flag = 2;
        habilitaCampos();
        Salvar.setEnabled(true);
        Cancelar.setEnabled(true);

    }//GEN-LAST:event_jTablePesquisaMouseClicked

    private void SaldoAtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaldoAtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaldoAtActionPerformed

    private void SaldoAt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaldoAt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaldoAt1ActionPerformed

    private void dataCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataCompraActionPerformed

    private void NwSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NwSaldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NwSaldoActionPerformed
    
    DefaultTableModel tmCliente = new DefaultTableModel(null, new String[]{"Id", "Nome", "Cpf","Nascimento", "Credito","Login","Senha"});
    List<BeansCliente> clientes;
    
    private void desabilitaCampos() {
        NwSaldo.setEditable(false);
    }
    
     private void habilitaCampos() {
        NwSaldo.setEditable(true);
    }
     
     private void limpaCampos() {
        nome.setText("");
        cpf.setText("");
        senha.setText("");
        id.setText("");
        codigAcesso.setText("");
        DateNasci.setText("");
        NwSaldo.setText("");
        SaldoAt.setText("");
    }
     
      private void limparTabela() {       
        while (tmCliente.getRowCount() > 0) {            
            tmCliente.removeRow(0);
        }
    } 
     
     private void mostraPesquisa(List<BeansCliente> cliente) {
        // Limpa a tabela sempre que for solicitado uma nova pesquisa
        limparTabela();
        
        if (cliente.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Nenhum registro encontrado.");
        } else {            
            // Linha em branco usada no for, para cada registro √© criada uma nova linha 
            String[] linha = new String[] {null, null, null, null, null, null, null};
            // P/ cada registro √© criada uma nova linha, cada recebe linha os campos do registro
            for (int i = 0; i < cliente.size(); i++) {
                tmCliente.addRow(linha);
                tmCliente.setValueAt(cliente.get(i).getCodigo(), i, 0);
                tmCliente.setValueAt(cliente.get(i).getNome(), i, 1);
                tmCliente.setValueAt(cliente.get(i).getCpf(), i, 2);
                tmCliente.setValueAt(cliente.get(i).getData(), i, 3);
                tmCliente.setValueAt(cliente.get(i).getCredito(), i, 4);
                tmCliente.setValueAt(cliente.get(i).getLogin(), i, 5);
                tmCliente.setValueAt(cliente.get(i).getSenha(), i, 6);

            }            
        }
    }
   
     private void alteraRegistro() throws SQLException, ClassNotFoundException {
        if (jTablePesquisa.getSelectedRow() != -1) {
            int resp = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente adicionar este valor?",
                    "Confirma√ß√£o!", JOptionPane.YES_NO_OPTION);

            // Se a confirma√ß√£o for SIM
            if (resp == JOptionPane.YES_NO_OPTION) {                
                DAOCliente controle = new DAOCliente(); 
                BeansCliente cliente = new BeansCliente();
                Float cred = Float.parseFloat(SaldoAt.getText());
                cliente.setCodigo(Integer.parseInt(id.getText()));
                Float novoS = Float.parseFloat(NwSaldo.getText());
                cred += novoS;
                cliente.setCredito(cred);
                
                cliente.setCodigo(Integer.parseInt(id.getText()));
                cliente.setNome(nome.getText());
                cliente.setCpf(cpf.getText());
                cliente.setData(DateNasci.getText());
                cliente.setLogin(codigAcesso.getText());
                cliente.setSenha(senha.getText());
                
                controle.altera(cliente);
                salvar();
                JOptionPane.showMessageDialog(rootPane, "Saldo adicionado com sucesso.");
                
                limpaCampos();
                desabilitaCampos();
                listaContatos();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Registro n√£o selecionado.");
        }
    }
public void salvar() throws ClassNotFoundException{
        BeansLogin log = new BeansLogin();
        try {
            reca.setIdF(BeansLogin.getId());
                reca.setNomefuncionario(log.getNome());
                reca.setLoginfuncionario(log.getLogin());
                reca.setNomecliente(nome.getText());
                reca.setLogincliente(codigAcesso.getText());
                reca.setValor(Float.parseFloat(NwSaldo.getText()));
                reca.setData(salvaDataRecarga());
                recaDAO.Salvar(reca);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"ERRO Ao Inserir Dados!\nErro: "+ex);
        } 

    }
     private void dataCompra(){
        
        Date data = new Date();  
        
        SimpleDateFormat formataData = new SimpleDateFormat("dd/MM/yyyy HH:mm");  
        String s = formataData.format( data ); 
        
        dataCompra.setText(formataData.format(data));
    }
     
     private String salvaDataRecarga() {
        Date data = new Date();  
        
        SimpleDateFormat formataData = new SimpleDateFormat("yyyy-MM-dd HH:mm");  
        String dataEmprestimoFormatada = formataData.format(data); 
        
        return dataEmprestimoFormatada;   
    }
     private void listaContatos() throws SQLException {
        limpaCampos();
        DAOCliente c = new DAOCliente();
        clientes = c.getLista("%" + Pesquisar.getText() + "%"); 
        
        // Ap√≥s pesquisar os contatos, executa o m√©todo p/ exibir o resultado na tabela pesquisa
        mostraPesquisa(clientes);
        clientes.clear();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecarregarCredito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecarregarCredito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecarregarCredito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecarregarCredito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecarregarCredito().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BPesquisar;
    private javax.swing.JButton Cancelar;
    private javax.swing.JTextField DateNasci;
    private javax.swing.JTextField NwSaldo;
    private javax.swing.JTextField Pesquisar;
    private javax.swing.JButton Sair;
    private javax.swing.JTextField SaldoAt;
    private javax.swing.JTextField SaldoAt1;
    private javax.swing.JButton Salvar;
    private javax.swing.JTextField codigAcesso;
    private javax.swing.JTextField cpf;
    private javax.swing.JTextField dataCompra;
    private javax.swing.JTextField id;
    private javax.swing.JLabel iddd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePesquisa;
    private javax.swing.JTextField nome;
    private javax.swing.JTextField senha;
    // End of variables declaration//GEN-END:variables

}
